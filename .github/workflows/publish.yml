name: Publish
on:
  push:
    branches:
      - main
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: Install Pnpm
        run: npm i -g pnpm
      - name: Install frontend dependencies
        run: pnpm install
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v0.0.11112
          releaseName: 'App v0.0.11112'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
      - name: Debug - List build output
        run: |
          ls -R src-tauri/target/release/bundle
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-artifact
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/deb/*.deb
      - name: Debug - List uploaded artifacts
        run: |
          ls -R ${{ github.workspace }}

  create-release:
    needs: publish-tauri
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: app-v0.0.11112
          release_name: App v0.0.11112
          draft: true
          prerelease: false
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-latest-artifact/*.msi
          asset_name: app-windows-v0.0.11112.msi
          asset_content_type: application/x-msi
      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-22.04-artifact/*.deb
          asset_name: app-linux-v0.0.11112.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Debug - List final artifacts
        run: |
          ls -R artifacts